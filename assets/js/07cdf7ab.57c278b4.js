"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[85],{39420:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>T,frontMatter:()=>s,metadata:()=>d,toc:()=>m});var n=l(58168),r=(l(96540),l(15680)),o=l(27450),p=(l(51597),l(86315)),i=l(72584);l(54757);const s={title:"HelperText"},a=void 0,d={unversionedId:"components/HelperText/HelperText",id:"components/HelperText/HelperText",title:"HelperText",description:"Helper text is used in conjuction with input elements to provide additional hints for the user.",source:"@site/docs/components/HelperText/HelperText.mdx",sourceDirName:"components/HelperText",slug:"/components/HelperText/",permalink:"/react-native-paper/docs/components/HelperText/",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/HelperText/HelperText.tsx",tags:[],version:"current",frontMatter:{title:"HelperText"},sidebar:"components",previous:{title:"FAB.Group",permalink:"/react-native-paper/docs/components/FAB/FABGroup"},next:{title:"Icon",permalink:"/react-native-paper/docs/components/Icon"}},c={},m=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"type",id:"type",level:3},{value:"children (required)",id:"children-required",level:3},{value:"visible",id:"visible",level:3},{value:"padding",id:"padding",level:3},{value:"disabled",id:"disabled",level:3},{value:"style",id:"style",level:3},{value:"theme",id:"theme",level:3},{value:"testID",id:"testid",level:3},{value:"Theme colors",id:"theme-colors",level:2}],u={toc:m},x="wrapper";function T(e){let{components:t,...l}=e;return(0,r.yg)(x,(0,n.A)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Helper text is used in conjuction with input elements to provide additional hints for the user."),(0,r.yg)(i.A,{screenshotData:"screenshots/helper-text.gif",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,r.yg)("h2",{id:"usage"},"Usage"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { View } from 'react-native';\nimport { HelperText, TextInput } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [text, setText] = React.useState('');\n\n   const onChangeText = text => setText(text);\n\n  const hasErrors = () => {\n    return !text.includes('@');\n  };\n\n return (\n    <View>\n      <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n      <HelperText type=\"error\" visible={hasErrors()}>\n        Email address is invalid!\n      </HelperText>\n    </View>\n  );\n};\n\nexport default MyComponent;\n")),(0,r.yg)("h2",{id:"props"},"Props"),(0,r.yg)("span",null),(0,r.yg)("div",null,(0,r.yg)("h3",{id:"type"},"type")),(0,r.yg)(o.A,{componentLink:"HelperText/HelperText",prop:"type",mdxType:"PropTable"}),(0,r.yg)("div",null,(0,r.yg)("h3",{id:"children-required"},"children (required)")),(0,r.yg)(o.A,{componentLink:"HelperText/HelperText",prop:"children",mdxType:"PropTable"}),(0,r.yg)("div",null,(0,r.yg)("h3",{id:"visible"},"visible")),(0,r.yg)(o.A,{componentLink:"HelperText/HelperText",prop:"visible",mdxType:"PropTable"}),(0,r.yg)("div",null,(0,r.yg)("h3",{id:"padding"},"padding")),(0,r.yg)(o.A,{componentLink:"HelperText/HelperText",prop:"padding",mdxType:"PropTable"}),(0,r.yg)("div",null,(0,r.yg)("h3",{id:"disabled"},"disabled")),(0,r.yg)(o.A,{componentLink:"HelperText/HelperText",prop:"disabled",mdxType:"PropTable"}),(0,r.yg)("div",null,(0,r.yg)("h3",{id:"style"},"style")),(0,r.yg)(o.A,{componentLink:"HelperText/HelperText",prop:"style",mdxType:"PropTable"}),(0,r.yg)("div",null,(0,r.yg)("h3",{id:"theme"},"theme")),(0,r.yg)(o.A,{componentLink:"HelperText/HelperText",prop:"theme",mdxType:"PropTable"}),(0,r.yg)("div",null,(0,r.yg)("h3",{id:"testid"},"testID")),(0,r.yg)(o.A,{componentLink:"HelperText/HelperText",prop:"testID",mdxType:"PropTable"}),(0,r.yg)("span",null),(0,r.yg)("h2",{id:"theme-colors"},"Theme colors"),(0,r.yg)(p.A,{themeColorsData:{disabled:{textColor:"theme.colors.onSurfaceDisabled"},default:{textColor:"theme.colors.onSurfaceVariant"},error:{textColor:"theme.colors.error"}},componentName:"HelperText",mdxType:"ThemeColorsTable"}),(0,r.yg)("span",null))}T.isMDXComponent=!0}}]);