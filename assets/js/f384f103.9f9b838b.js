"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1798],{73437:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>g,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>v});var o=n(58168),a=(n(96540),n(15680)),i=n(27450),r=(n(51597),n(86315),n(72584)),l=n(54757);const s={title:"BottomNavigation.Bar"},g=void 0,c={unversionedId:"components/BottomNavigation/BottomNavigationBar",id:"components/BottomNavigation/BottomNavigationBar",title:"BottomNavigation.Bar",description:"A navigation bar which can easily be integrated with React Navigation's Bottom Tabs Navigator.",source:"@site/docs/components/BottomNavigation/BottomNavigationBar.mdx",sourceDirName:"components/BottomNavigation",slug:"/components/BottomNavigation/BottomNavigationBar",permalink:"/react-native-paper/docs/components/BottomNavigation/BottomNavigationBar",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/BottomNavigation/BottomNavigationBar.tsx",tags:[],version:"current",frontMatter:{title:"BottomNavigation.Bar"},sidebar:"components",previous:{title:"BottomNavigation",permalink:"/react-native-paper/docs/components/BottomNavigation/"},next:{title:"Button",permalink:"/react-native-paper/docs/components/Button/"}},m={},v=[{value:"Usage",id:"usage",level:2},{value:"without React Navigation",id:"without-react-navigation",level:3},{value:"with React Navigation",id:"with-react-navigation",level:3},{value:"Props",id:"props",level:2},{value:"shifting",id:"shifting",level:3},{value:"labeled",id:"labeled",level:3},{value:"compact",id:"compact",level:3},{value:"navigationState (required)",id:"navigationstate-required",level:3},{value:"renderIcon",id:"rendericon",level:3},{value:"renderLabel",id:"renderlabel",level:3},{value:"renderTouchable",id:"rendertouchable",level:3},{value:"getAccessibilityLabel",id:"getaccessibilitylabel",level:3},{value:"getBadge",id:"getbadge",level:3},{value:"getColor",id:"getcolor",level:3},{value:"getLabelText",id:"getlabeltext",level:3},{value:"getTestID",id:"gettestid",level:3},{value:"onTabPress (required)",id:"ontabpress-required",level:3},{value:"onTabLongPress",id:"ontablongpress",level:3},{value:"activeColor",id:"activecolor",level:3},{value:"inactiveColor",id:"inactivecolor",level:3},{value:"animationEasing",id:"animationeasing",level:3},{value:"keyboardHidesNavigationBar",id:"keyboardhidesnavigationbar",level:3},{value:"safeAreaInsets",id:"safeareainsets",level:3},{value:"labelMaxFontSizeMultiplier",id:"labelmaxfontsizemultiplier",level:3},{value:"style",id:"style",level:3},{value:"activeIndicatorStyle",id:"activeindicatorstyle",level:3},{value:"theme",id:"theme",level:3},{value:"testID",id:"testid",level:3}],p={toc:v},d="wrapper";function u(t){let{components:e,...n}=t;return(0,a.yg)(d,(0,o.A)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"A navigation bar which can easily be integrated with ",(0,a.yg)("a",{parentName:"p",href:"https://reactnavigation.org/docs/bottom-tab-navigator/"},"React Navigation's Bottom Tabs Navigator"),"."),(0,a.yg)(r.A,{screenshotData:"screenshots/bottom-navigation-tabs.jpg",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)("h3",{id:"without-react-navigation"},"without React Navigation"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { useState } from 'react';\nimport { View } from 'react-native';\nimport { BottomNavigation, Text, Provider } from 'react-native-paper';\nimport MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\n\nfunction HomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Home!</Text>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Settings!</Text>\n  </View>\n  );\n}\n\nexport default function MyComponent() {\n  const [index, setIndex] = useState(0);\n\n  const routes = [\n    { key: 'home', title: 'Home', icon: 'home' },\n    { key: 'settings', title: 'Settings', icon: 'cog' },\n  ];\n\n  const renderScene = ({ route }) => {\n    switch (route.key) {\n      case 'home':\n        return <HomeScreen />;\n      case 'settings':\n        return <SettingsScreen />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Provider>\n      {renderScene({ route: routes[index] })}\n      <BottomNavigation.Bar\n        navigationState={{ index, routes }}\n        onTabPress={({ route }) => {\n          const newIndex = routes.findIndex((r) => r.key === route.key);\n          if (newIndex !== -1) {\n            setIndex(newIndex);\n          }\n        }}\n        renderIcon={({ route, color }) => (\n          <Icon name={route.icon} size={24} color={color} />\n        )}\n        getLabelText={({ route }) => route.title}\n      />\n    </Provider>\n  );\n}\n")),(0,a.yg)("h3",{id:"with-react-navigation"},"with React Navigation"),(0,a.yg)(l.A,{extendedExamplesData:{"with React Navigation":{static:"import { Text, View } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider, BottomNavigation } from 'react-native-paper';\nimport MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport {\n  CommonActions,\n  createStaticNavigation,\n} from '@react-navigation/native';\n\nfunction HomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Home!</Text>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\nconst MyTabs = createBottomTabNavigator({\n  screenOptions: {\n    animation: 'shift',\n  },\n  tabBar: ({ navigation, state, descriptors, insets }) => (\n    <BottomNavigation.Bar\n      navigationState={state}\n      safeAreaInsets={insets}\n      onTabPress={({ route, preventDefault }) => {\n        const event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true,\n        });\n\n        if (event.defaultPrevented) {\n          preventDefault();\n        } else {\n          navigation.dispatch({\n            ...CommonActions.navigate(route.name, route.params),\n            target: state.key,\n          });\n        }\n      }}\n      renderIcon={({ route, focused, color }) =>\n        descriptors[route.key].options.tabBarIcon?.({\n          focused,\n          color,\n          size: 24,\n        }) || null\n      }\n      getLabelText={({ route }) => {\n        const { options } = descriptors[route.key];\n        const label =\n          typeof options.tabBarLabel === 'string'\n            ? options.tabBarLabel\n            : typeof options.title === 'string'\n            ? options.title\n            : route.name;\n\n        return label;\n      }}\n    />\n  ),\n  screens: {\n    Home: {\n      screen: HomeScreen,\n      options: {\n        tabBarIcon: ({ color }) => (\n          <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n        ),\n      },\n    },\n    Settings: {\n      screen: SettingsScreen,\n      options: {\n        tabBarIcon: ({ color }) => (\n          <MaterialCommunityIcons name=\"cog\" color={color} size={26} />\n        ),\n      },\n    },\n  },\n});\n\nconst Navigation = createStaticNavigation(MyTabs);\n\nexport default function App() {\n  return (\n    <Provider>\n      <Navigation>\n        <MyTabs />\n      </Navigation>\n    </Provider>\n  );\n}",dynamic:"import { Text, View } from 'react-native';\nimport { NavigationContainer, CommonActions } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider, BottomNavigation } from 'react-native-paper';\nimport MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\n\nfunction HomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Home!</Text>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <Provider>\n      <NavigationContainer>\n        <Tab.Navigator\n          screenOptions={{\n            animation: 'shift',\n          }}\n          tabBar={({ navigation, state, descriptors, insets }) => (\n            <BottomNavigation.Bar\n              navigationState={state}\n              safeAreaInsets={insets}\n              onTabPress={({ route, preventDefault }) => {\n                const event = navigation.emit({\n                  type: 'tabPress',\n                  target: route.key,\n                  canPreventDefault: true,\n                });\n\n                if (event.defaultPrevented) {\n                  preventDefault();\n                } else {\n                  navigation.dispatch({\n                    ...CommonActions.navigate(route.name, route.params),\n                    target: state.key,\n                  });\n                }\n              }}\n              renderIcon={({ route, focused, color }) =>\n                descriptors[route.key].options.tabBarIcon?.({\n                  focused,\n                  color,\n                  size: 24,\n                }) || null\n              }\n              getLabelText={({ route }) => {\n                const { options } = descriptors[route.key];\n                const label =\n                  typeof options.tabBarLabel === 'string'\n                    ? options.tabBarLabel\n                    : typeof options.title === 'string'\n                    ? options.title\n                    : route.name;\n\n                return label;\n              }}\n            />\n          )}>\n          <Tab.Screen\n            name=\"Home\"\n            component={HomeScreen}\n            options={{\n              tabBarIcon: ({ color }) => (\n                <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n              ),\n            }}\n          />\n          <Tab.Screen\n            name=\"Settings\"\n            component={SettingsScreen}\n            options={{\n              tabBarIcon: ({ color }) => (\n                <MaterialCommunityIcons name=\"cog\" color={color} size={26} />\n              ),\n            }}\n          />\n        </Tab.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n}\n"}},mdxType:"ExtendedExample"}),(0,a.yg)("h2",{id:"props"},"Props"),(0,a.yg)("span",null),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"shifting"},"shifting")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"shifting",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"labeled"},"labeled")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"labeled",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"compact"},"compact")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"compact",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"navigationstate-required"},"navigationState (required)")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"navigationState",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"rendericon"},"renderIcon")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"renderIcon",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"renderlabel"},"renderLabel")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"renderLabel",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"rendertouchable"},"renderTouchable")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"renderTouchable",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"getaccessibilitylabel"},"getAccessibilityLabel")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"getAccessibilityLabel",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"getbadge"},"getBadge")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"getBadge",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"getcolor"},"getColor")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"getColor",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"getlabeltext"},"getLabelText")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"getLabelText",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"gettestid"},"getTestID")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"getTestID",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"ontabpress-required"},"onTabPress (required)")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"onTabPress",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"ontablongpress"},"onTabLongPress")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"onTabLongPress",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"activecolor"},"activeColor")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"activeColor",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"inactivecolor"},"inactiveColor")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"inactiveColor",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"animationeasing"},"animationEasing")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"animationEasing",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"keyboardhidesnavigationbar"},"keyboardHidesNavigationBar")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"keyboardHidesNavigationBar",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"safeareainsets"},"safeAreaInsets")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"safeAreaInsets",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"labelmaxfontsizemultiplier"},"labelMaxFontSizeMultiplier")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"labelMaxFontSizeMultiplier",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"style"},"style")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"style",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"activeindicatorstyle"},"activeIndicatorStyle")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"activeIndicatorStyle",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"theme"},"theme")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"theme",mdxType:"PropTable"}),(0,a.yg)("div",null,(0,a.yg)("h3",{id:"testid"},"testID")),(0,a.yg)(i.A,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"testID",mdxType:"PropTable"}),(0,a.yg)("span",null),(0,a.yg)("span",null),(0,a.yg)("span",null))}u.isMDXComponent=!0}}]);