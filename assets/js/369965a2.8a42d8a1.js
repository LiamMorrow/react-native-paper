"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2476],{28278:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>d,default:()=>v,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var t=n(58168),l=(n(96540),n(15680)),a=n(27450),i=(n(51597),n(86315)),s=n(72584);n(54757);const r={title:"Modal"},d=void 0,p={unversionedId:"components/Modal",id:"components/Modal",title:"Modal",description:"The Modal component is a simple way to present content above an enclosing view.",source:"@site/docs/components/Modal.mdx",sourceDirName:"components",slug:"/components/Modal",permalink:"/react-native-paper/docs/components/Modal",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/Modal.tsx",tags:[],version:"current",frontMatter:{title:"Modal"},sidebar:"components",previous:{title:"Menu.Item",permalink:"/react-native-paper/docs/components/Menu/MenuItem"},next:{title:"Portal",permalink:"/react-native-paper/docs/components/Portal/"}},c={},m=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"dismissable",id:"dismissable",level:3},{value:"dismissableBackButton",id:"dismissablebackbutton",level:3},{value:"onDismiss",id:"ondismiss",level:3},{value:"overlayAccessibilityLabel",id:"overlayaccessibilitylabel",level:3},{value:"visible",id:"visible",level:3},{value:"children (required)",id:"children-required",level:3},{value:"contentContainerStyle",id:"contentcontainerstyle",level:3},{value:"style",id:"style",level:3},{value:"theme",id:"theme",level:3},{value:"testID",id:"testid",level:3},{value:"Theme colors",id:"theme-colors",level:2}],y={toc:m},u="wrapper";function v(e){let{components:o,...n}=e;return(0,l.yg)(u,(0,t.A)({},y,n,{components:o,mdxType:"MDXLayout"}),(0,l.yg)("p",null,"The Modal component is a simple way to present content above an enclosing view.\nTo render the ",(0,l.yg)("inlineCode",{parentName:"p"},"Modal")," above other components, you'll need to wrap it with the ",(0,l.yg)("a",{parentName:"p",href:"./Portal"},(0,l.yg)("inlineCode",{parentName:"a"},"Portal"))," component."),(0,l.yg)(s.A,{screenshotData:"screenshots/modal.gif",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,l.yg)("h2",{id:"usage"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { Modal, Portal, Text, Button, PaperProvider } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [visible, setVisible] = React.useState(false);\n\n  const showModal = () => setVisible(true);\n  const hideModal = () => setVisible(false);\n  const containerStyle = {backgroundColor: 'white', padding: 20};\n\n  return (\n    <PaperProvider>\n      <Portal>\n        <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={containerStyle}>\n          <Text>Example Modal.  Click outside this area to dismiss.</Text>\n        </Modal>\n      </Portal>\n      <Button style={{marginTop: 30}} onPress={showModal}>\n        Show\n      </Button>\n    </PaperProvider>\n  );\n};\n\nexport default MyComponent;\n")),(0,l.yg)("h2",{id:"props"},"Props"),(0,l.yg)("span",null),(0,l.yg)("div",null,(0,l.yg)("h3",{id:"dismissable"},"dismissable")),(0,l.yg)(a.A,{componentLink:"Modal",prop:"dismissable",mdxType:"PropTable"}),(0,l.yg)("div",null,(0,l.yg)("h3",{id:"dismissablebackbutton"},"dismissableBackButton")),(0,l.yg)(a.A,{componentLink:"Modal",prop:"dismissableBackButton",mdxType:"PropTable"}),(0,l.yg)("div",null,(0,l.yg)("h3",{id:"ondismiss"},"onDismiss")),(0,l.yg)(a.A,{componentLink:"Modal",prop:"onDismiss",mdxType:"PropTable"}),(0,l.yg)("div",null,(0,l.yg)("h3",{id:"overlayaccessibilitylabel"},"overlayAccessibilityLabel")),(0,l.yg)(a.A,{componentLink:"Modal",prop:"overlayAccessibilityLabel",mdxType:"PropTable"}),(0,l.yg)("div",null,(0,l.yg)("h3",{id:"visible"},"visible")),(0,l.yg)(a.A,{componentLink:"Modal",prop:"visible",mdxType:"PropTable"}),(0,l.yg)("div",null,(0,l.yg)("h3",{id:"children-required"},"children (required)")),(0,l.yg)(a.A,{componentLink:"Modal",prop:"children",mdxType:"PropTable"}),(0,l.yg)("div",null,(0,l.yg)("h3",{id:"contentcontainerstyle"},"contentContainerStyle")),(0,l.yg)(a.A,{componentLink:"Modal",prop:"contentContainerStyle",mdxType:"PropTable"}),(0,l.yg)("div",null,(0,l.yg)("h3",{id:"style"},"style")),(0,l.yg)(a.A,{componentLink:"Modal",prop:"style",mdxType:"PropTable"}),(0,l.yg)("div",null,(0,l.yg)("h3",{id:"theme"},"theme")),(0,l.yg)(a.A,{componentLink:"Modal",prop:"theme",mdxType:"PropTable"}),(0,l.yg)("div",null,(0,l.yg)("h3",{id:"testid"},"testID")),(0,l.yg)(a.A,{componentLink:"Modal",prop:"testID",mdxType:"PropTable"}),(0,l.yg)("span",null),(0,l.yg)("h2",{id:"theme-colors"},"Theme colors"),(0,l.yg)(i.A,{themeColorsData:{"-":{backgroundColor:"theme.colors.backdrop"}},componentName:"Modal",mdxType:"ThemeColorsTable"}),(0,l.yg)("span",null))}v.isMDXComponent=!0}}]);