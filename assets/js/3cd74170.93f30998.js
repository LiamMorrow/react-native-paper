"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4870],{73818:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>p,metadata:()=>s,toc:()=>c});var t=n(58168),r=(n(96540),n(15680)),l=n(96653),o=n(94876);const p={title:"Using on the Web"},i="Using on the Web",s={unversionedId:"guides/react-native-web",id:"guides/react-native-web",title:"Using on the Web",description:"Pre-requisites",source:"@site/docs/guides/05-react-native-web.md",sourceDirName:"guides",slug:"/guides/react-native-web",permalink:"/react-native-paper/docs/guides/react-native-web",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/docs/docs/guides/05-react-native-web.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Using on the Web"},sidebar:"tutorialSidebar",previous:{title:"Fonts",permalink:"/react-native-paper/docs/guides/fonts"},next:{title:"Recommended Libraries",permalink:"/react-native-paper/docs/guides/recommended-libraries"}},d={},c=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Using CRA (Create React App)",id:"using-cra-create-react-app",level:3},{value:"Custom webpack setup",id:"custom-webpack-setup",level:3},{value:"Configure webpack",id:"configure-webpack",level:2},{value:"1. Alias <code>react-native</code> to <code>react-native-web</code>",id:"1-alias-react-native-to-react-native-web",level:3},{value:"2. Configure <code>babel-loader</code>",id:"2-configure-babel-loader",level:3},{value:"3. Configure <code>file-loader</code>",id:"3-configure-file-loader",level:3},{value:"webpack &lt; 5.0",id:"webpack--50",level:4},{value:"webpack &gt;= 5.0",id:"webpack--50-1",level:5},{value:"Load the Material Design Icons",id:"load-the-material-design-icons",level:2},{value:"Load the Roboto fonts (optional)",id:"load-the-roboto-fonts-optional",level:2},{value:"We&#39;re done!",id:"were-done",level:2}],g={toc:c},u="wrapper";function m(e){let{components:a,...n}=e;return(0,r.yg)(u,(0,t.A)({},g,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"using-on-the-web"},"Using on the Web"),(0,r.yg)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,r.yg)("p",null,"Make sure that you have followed the getting started guide and have ",(0,r.yg)("inlineCode",{parentName:"p"},"react-native-paper")," installed and configured before following this guide."),(0,r.yg)("p",null,"We're going to use ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/necolas/react-native-web"},"react-native-web")," and ",(0,r.yg)("a",{parentName:"p",href:"https://webpack.js.org/"},"webpack")," to use React Native Paper on the web, so let's install them as well."),(0,r.yg)("p",null,"To install ",(0,r.yg)("inlineCode",{parentName:"p"},"react-native-web"),", run:"),(0,r.yg)(l.A,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.yg)(o.A,{value:"npm",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install react-native-web react-dom react-art\n"))),(0,r.yg)(o.A,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add react-native-web react-dom react-art\n"))),(0,r.yg)(o.A,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm add react-native-web react-dom react-art\n")))),(0,r.yg)("h3",{id:"using-cra-create-react-app"},"Using CRA (",(0,r.yg)("a",{parentName:"h3",href:"https://github.com/facebook/create-react-app"},"Create React App"),")"),(0,r.yg)("p",null,"Install ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/timarney/react-app-rewired"},(0,r.yg)("inlineCode",{parentName:"a"},"react-app-rewired"))," to override ",(0,r.yg)("inlineCode",{parentName:"p"},"webpack")," configuration:"),(0,r.yg)(l.A,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.yg)(o.A,{value:"npm",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install\xa0--save-dev react-app-rewired\n"))),(0,r.yg)(o.A,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install\xa0--save-dev react-app-rewired\n# couldn't auto-convert command\n"))),(0,r.yg)(o.A,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install\xa0--save-dev react-app-rewired\n# couldn't auto-convert command\n")))),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"#2-configure-babel-loader"},"Configure ",(0,r.yg)("inlineCode",{parentName:"a"},"babel-loader"))," using a new file called ",(0,r.yg)("inlineCode",{parentName:"p"},"config-overrides.js"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"module.exports = function override(config, env) {\n  config.module.rules.push({\n    test: /\\.js$/,\n    exclude: /node_modules[/\\\\](?!react-native-vector-icons)/,\n    use: {\n      loader: 'babel-loader',\n      options: {\n        // Disable reading babel configuration\n        babelrc: false,\n        configFile: false,\n\n        // The configuration for compilation\n        presets: [\n          ['@babel/preset-env', { useBuiltIns: 'usage' }],\n          '@babel/preset-react',\n          '@babel/preset-flow',\n          '@babel/preset-typescript',\n        ],\n        plugins: [\n          '@babel/plugin-proposal-class-properties',\n          '@babel/plugin-proposal-object-rest-spread',\n        ],\n      },\n    },\n  });\n\n  return config;\n};\n")),(0,r.yg)("p",null,"Change your script in ",(0,r.yg)("inlineCode",{parentName:"p"},"package.json"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'/* package.json */\n\n  "scripts": {\n-   "start": "react-scripts start",\n+   "start": "react-app-rewired start",\n-   "build": "react-scripts build",\n+   "build": "react-app-rewired build",\n-   "test": "react-scripts test --env=jsdom",\n+   "test": "react-app-rewired test --env=jsdom"\n}\n')),(0,r.yg)("h3",{id:"custom-webpack-setup"},"Custom webpack setup"),(0,r.yg)("p",null,"To install ",(0,r.yg)("inlineCode",{parentName:"p"},"webpack"),", run:"),(0,r.yg)(l.A,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.yg)(o.A,{value:"npm",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev webpack webpack-cli webpack-dev-server\n"))),(0,r.yg)(o.A,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev webpack webpack-cli webpack-dev-server\n"))),(0,r.yg)(o.A,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm add --save-dev webpack webpack-cli webpack-dev-server\n")))),(0,r.yg)("p",null,"If you don't have a webpack config in your project, copy the following to ",(0,r.yg)("inlineCode",{parentName:"p"},"webpack.config.js")," get started:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const path = require('path');\n\nmodule.exports = {\n  mode: 'development',\n\n  // Path to the entry file, change it according to the path you have\n  entry: path.join(__dirname, 'App.js'),\n\n  // Path for the output files\n  output: {\n    path: path.join(__dirname, 'dist'),\n    filename: 'app.bundle.js',\n  },\n\n  // Enable source map support\n  devtool: 'source-map',\n\n  // Loaders and resolver config\n  module: {\n    rules: [],\n  },\n  resolve: {},\n\n  // Development server config\n  devServer: {\n    contentBase: [path.join(__dirname, 'public')],\n    historyApiFallback: true,\n  },\n};\n")),(0,r.yg)("p",null,"Also create a folder named ",(0,r.yg)("inlineCode",{parentName:"p"},"public")," and add the following file named ",(0,r.yg)("inlineCode",{parentName:"p"},"index.html"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<head>\n  <meta charset="utf-8" />\n  <meta httpEquiv="X-UA-Compatible" content="IE=edge" />\n\n  <meta\n    name="viewport"\n    content="width=device-width,minimum-scale=1,initial-scale=1"\n  />\n\n  <title>App</title>\n\n  <style>\n    html,\n    body,\n    #root {\n      height: 100%;\n    }\n\n    #root {\n      display: flex;\n      flex-direction: column;\n    }\n  </style>\n</head>\n<body>\n  <div id="root"></div>\n  <script src="app.bundle.js"><\/script>\n</body>\n')),(0,r.yg)("p",null,"Now we're ready to start configuring the project."),(0,r.yg)("h2",{id:"configure-webpack"},"Configure webpack"),(0,r.yg)("h3",{id:"1-alias-react-native-to-react-native-web"},"1. Alias ",(0,r.yg)("inlineCode",{parentName:"h3"},"react-native")," to ",(0,r.yg)("inlineCode",{parentName:"h3"},"react-native-web")),(0,r.yg)("p",null,"First, we have to tell webpack to use ",(0,r.yg)("inlineCode",{parentName:"p"},"react-native-web")," instead of ",(0,r.yg)("inlineCode",{parentName:"p"},"react-native"),". Add the following alias in your webpack config under ",(0,r.yg)("inlineCode",{parentName:"p"},"resolve"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"alias: {\n  'react-native$': require.resolve('react-native-web'),\n}\n")),(0,r.yg)("h3",{id:"2-configure-babel-loader"},"2. Configure ",(0,r.yg)("inlineCode",{parentName:"h3"},"babel-loader")),(0,r.yg)("p",null,"Next, we want to tell ",(0,r.yg)("inlineCode",{parentName:"p"},"babel-loader")," to compile ",(0,r.yg)("inlineCode",{parentName:"p"},"react-native-paper")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"react-native-vector-icons"),". We would also want to disable reading the babel configuration files to prevent any conflicts."),(0,r.yg)("p",null,"First install the required dependencies:"),(0,r.yg)(l.A,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.yg)(o.A,{value:"npm",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev babel-loader @babel/preset-env @babel/preset-react @babel/preset-flow @babel/preset-typescript @babel/plugin-proposal-class-properties @babel/plugin-proposal-object-rest-spread\n"))),(0,r.yg)(o.A,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev babel-loader @babel/preset-env @babel/preset-react @babel/preset-flow @babel/preset-typescript @babel/plugin-proposal-class-properties @babel/plugin-proposal-object-rest-spread\n"))),(0,r.yg)(o.A,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm add --save-dev babel-loader @babel/preset-env @babel/preset-react @babel/preset-flow @babel/preset-typescript @babel/plugin-proposal-class-properties @babel/plugin-proposal-object-rest-spread\n")))),(0,r.yg)("p",null,"Now, add the following in the ",(0,r.yg)("inlineCode",{parentName:"p"},"module.rules")," array in your webpack config:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"{\n  test: /\\.js$/,\n  exclude: /node_modules[/\\\\](?!react-native-vector-icons)/,\n  use: {\n    loader: 'babel-loader',\n    options: {\n      // Disable reading babel configuration\n      babelrc: false,\n      configFile: false,\n\n      // The configuration for compilation\n      presets: [\n        ['@babel/preset-env', { useBuiltIns: 'usage' }],\n        '@babel/preset-react',\n        '@babel/preset-flow',\n        \"@babel/preset-typescript\"\n      ],\n      plugins: [\n        '@babel/plugin-proposal-class-properties',\n        '@babel/plugin-proposal-object-rest-spread'\n      ],\n    },\n  },\n},\n")),(0,r.yg)("h3",{id:"3-configure-file-loader"},"3. Configure ",(0,r.yg)("inlineCode",{parentName:"h3"},"file-loader")),(0,r.yg)("h4",{id:"webpack--50"},"webpack < 5.0"),(0,r.yg)("p",null,"To be able to import images and other assets using ",(0,r.yg)("inlineCode",{parentName:"p"},"require"),", we need to configure ",(0,r.yg)("inlineCode",{parentName:"p"},"file-loader"),". Let's install it:"),(0,r.yg)(l.A,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.yg)(o.A,{value:"npm",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev file-loader\n"))),(0,r.yg)(o.A,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev file-loader\n"))),(0,r.yg)(o.A,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm add --save-dev file-loader\n")))),(0,r.yg)("p",null,"To configure it, add the following in the ",(0,r.yg)("inlineCode",{parentName:"p"},"module.rules")," array in your webpack config:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"{\n  test: /\\.(jpg|png|woff|woff2|eot|ttf|svg)$/,\n  loader: 'file-loader',\n}\n")),(0,r.yg)("h5",{id:"webpack--50-1"},"webpack >= 5.0"),(0,r.yg)("p",null,"Use ",(0,r.yg)("inlineCode",{parentName:"p"},"asset/resource"),", since ",(0,r.yg)("inlineCode",{parentName:"p"},"file-loader")," was deprecated in webpack v5."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"{\n  test: /\\.(jpg|png|woff|woff2|eot|ttf|svg)$/,\n  type: 'asset/resource'\n}\n")),(0,r.yg)("h2",{id:"load-the-material-design-icons"},"Load the Material Design Icons"),(0,r.yg)("p",null,"If you followed the getting started guide, you should have the following code in your root component:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"<PaperProvider>\n  <App />\n</PaperProvider>\n")),(0,r.yg)("p",null,"Now we need tweak this section to load the Material Design Icons from the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/oblador/react-native-vector-icons"},(0,r.yg)("inlineCode",{parentName:"a"},"react-native-vector-icons"))," library:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"<PaperProvider>\n  <React.Fragment>\n    {Platform.OS === 'web' ? (\n      <style type=\"text/css\">{`\n        @font-face {\n          font-family: 'MaterialDesignIcons';\n          src: url(${require('@react-native-vector-icons/material-design-icons/fonts/MaterialDesignIcons.ttf')}) format('truetype');\n        }\n      `}</style>\n    ) : null}\n    <App />\n  </React.Fragment>\n</PaperProvider>\n")),(0,r.yg)("p",null,"Remember to import ",(0,r.yg)("inlineCode",{parentName:"p"},"Platform")," from ",(0,r.yg)("inlineCode",{parentName:"p"},"react-native")," at the top:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"import { Platform } from 'react-native';\n")),(0,r.yg)("p",null,"You can also load these fonts using ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/webpack-contrib/css-loader"},(0,r.yg)("inlineCode",{parentName:"a"},"css-loader"))," if you prefer."),(0,r.yg)("h2",{id:"load-the-roboto-fonts-optional"},"Load the Roboto fonts (optional)"),(0,r.yg)("p",null,"The default theme in React Native Paper uses the Roboto font. You can add them to your project following ",(0,r.yg)("a",{parentName:"p",href:"https://fonts.google.com/specimen/Roboto?selection.family=Roboto:100,300,400,500"},"the instructions on its Google Fonts page"),"."),(0,r.yg)("h2",{id:"were-done"},"We're done!"),(0,r.yg)("p",null,"You can run ",(0,r.yg)("inlineCode",{parentName:"p"},"webpack-dev-server")," to run the webpack server and open your project in the browser. You can add the following script in your ",(0,r.yg)("inlineCode",{parentName:"p"},"package.json")," under the ",(0,r.yg)("inlineCode",{parentName:"p"},'"scripts"')," section to make it easier:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'"web": "webpack-dev-server --open"\n')),(0,r.yg)("p",null,"Now you can run ",(0,r.yg)("inlineCode",{parentName:"p"},"yarn web")," to run the project on web."))}m.isMDXComponent=!0}}]);