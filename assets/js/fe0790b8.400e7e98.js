"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2166],{42381:(e,o,l)=>{l.r(o),l.d(o,{assets:()=>r,contentTitle:()=>a,default:()=>m,frontMatter:()=>p,metadata:()=>c,toc:()=>s});var t=l(58168),n=(l(96540),l(15680)),i=l(27450);l(51597),l(86315),l(72584),l(54757);const p={title:"Checkbox.Item"},a=void 0,c={unversionedId:"components/Checkbox/CheckboxItem",id:"components/Checkbox/CheckboxItem",title:"Checkbox.Item",description:"Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.",source:"@site/docs/components/Checkbox/CheckboxItem.mdx",sourceDirName:"components/Checkbox",slug:"/components/Checkbox/CheckboxItem",permalink:"/react-native-paper/docs/components/Checkbox/CheckboxItem",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/Checkbox/CheckboxItem.tsx",tags:[],version:"current",frontMatter:{title:"Checkbox.Item"},sidebar:"components",previous:{title:"Checkbox.IOS",permalink:"/react-native-paper/docs/components/Checkbox/CheckboxIOS"},next:{title:"Chip",permalink:"/react-native-paper/docs/components/Chip/"}},r={},s=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"status (required)",id:"status-required",level:3},{value:"disabled",id:"disabled",level:3},{value:"label (required)",id:"label-required",level:3},{value:"onPress",id:"onpress",level:3},{value:"onLongPress",id:"onlongpress",level:3},{value:"background",id:"background",level:3},{value:"accessibilityLabel",id:"accessibilitylabel",level:3},{value:"uncheckedColor",id:"uncheckedcolor",level:3},{value:"color",id:"color",level:3},{value:"rippleColor",id:"ripplecolor",level:3},{value:"style",id:"style",level:3},{value:"labelMaxFontSizeMultiplier",id:"labelmaxfontsizemultiplier",level:3},{value:"labelStyle",id:"labelstyle",level:3},{value:'labelVariant  <span class="badge badge-supported "><span class="badge-text">Available in v5.x with theme version 3</span></span>',id:"labelvariant--available-in-v5x-with-theme-version-3",level:3},{value:"theme",id:"theme",level:3},{value:"testID",id:"testid",level:3},{value:"position",id:"position",level:3},{value:"mode",id:"mode",level:3},{value:"hitSlop",id:"hitslop",level:3}],d={toc:s},b="wrapper";function m(e){let{components:o,...l}=e;return(0,n.yg)(b,(0,t.A)({},d,l,{components:o,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox."),(0,n.yg)("span",null),(0,n.yg)("h2",{id:"usage"},"Usage"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <View>\n    <Checkbox.Item label=\"Item\" status=\"checked\" />\n  </View>\n);\n\nexport default MyComponent;\n")),(0,n.yg)("h2",{id:"props"},"Props"),(0,n.yg)("span",null),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"status-required"},"status (required)")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"status",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"disabled"},"disabled")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"disabled",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"label-required"},"label (required)")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"label",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"onpress"},"onPress")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"onPress",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"onlongpress"},"onLongPress")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"onLongPress",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"background"},"background")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"background",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"accessibilitylabel"},"accessibilityLabel")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"accessibilityLabel",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"uncheckedcolor"},"uncheckedColor")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"uncheckedColor",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"color"},"color")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"color",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"ripplecolor"},"rippleColor")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"rippleColor",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"style"},"style")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"style",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"labelmaxfontsizemultiplier"},"labelMaxFontSizeMultiplier")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"labelMaxFontSizeMultiplier",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"labelstyle"},"labelStyle")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"labelStyle",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"labelvariant--available-in-v5x-with-theme-version-3"},"labelVariant  ",(0,n.yg)("span",{class:"badge badge-supported "},(0,n.yg)("span",{class:"badge-text"},"Available in v5.x with theme version 3")))),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"labelVariant",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"theme"},"theme")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"theme",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"testid"},"testID")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"testID",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"position"},"position")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"position",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"mode"},"mode")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"mode",mdxType:"PropTable"}),(0,n.yg)("div",null,(0,n.yg)("h3",{id:"hitslop"},"hitSlop")),(0,n.yg)(i.A,{componentLink:"Checkbox/CheckboxItem",prop:"hitSlop",mdxType:"PropTable"}),(0,n.yg)("span",null),(0,n.yg)("span",null),(0,n.yg)("span",null))}m.isMDXComponent=!0}}]);